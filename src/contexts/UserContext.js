import React, { useState, createContext } from "react";
/**
 * User definition
 * @typedef {Object} User
 * @property {string} nric - User's NRIC
 * @property {string} name - User's Name
 * @property {number[]} recommendations - Array of page ids representing user's recommendations generated by ML model
 */

/** @type {User[]} */
const demoUsers = [
  {
    nric: "S9250265W",
    name: "Billy Martin",
    recommendations: [3, 0, 2],
  },
  {
    nric: "S6548272X",
    name: "Evelyn Kane",
    recommendations: [6, 3, 5],
  },
];

/**
 * Get all users available for demo.
 * @returns {User[]} User
 */
const getAllUsers = () => demoUsers;

/**
 * Get current user.
 * @returns {User} User
 */
let getCurrentUser = () => {};

/**
 * Set current user.
 * @param {string} nric
 */
let setCurrentUser = () => {};

export const UserContext = createContext({
  getAllUsers,
  getCurrentUser,
  setCurrentUser,
});

export const UserProvider = (props) => {
  const [currentNric, setCurrentNric] = useState(demoUsers[0].nric);

  getCurrentUser = () => demoUsers.find((user) => user.nric === currentNric);
  setCurrentUser = (nric) => {
    if (demoUsers.some((user) => user.nric === nric)) setCurrentNric(nric);
  };

  return (
    <UserContext.Provider
      value={{ getAllUsers, getCurrentUser, setCurrentUser }}
    >
      {props.children}
    </UserContext.Provider>
  );
};
